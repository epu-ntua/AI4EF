version: '3'
services:
  ai4ef-model-app:
    container_name: ai4ef-model-app
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${MODEL_APP_PORT}:${MODEL_APP_PORT}"
    command: ["uvicorn", "ai4ef_model_app.api:app", "--host", "0.0.0.0", "--port", "${MODEL_APP_PORT}"]
    expose:
      - "${MODEL_APP_PORT}"
    volumes:
      - ./:/leif_app/code # local dir is translated to leif_app/code in image file system

  ai4ef-train-app:
    container_name: ai4ef-train-app
    restart: always
    image: ai4ef-train-app
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /leif_app/ai4ef_train_app
    command: ["dagster", "dev", "-h", "0.0.0.0", "-p", "${TRAIN_APP_PORT}"]
    expose:
      - "${TRAIN_APP_PORT}"
    ports:
      - "${TRAIN_APP_PORT}:${TRAIN_APP_PORT}"

  server:
    container_name: leif-postgrest-service
    image: postgrest/postgrest
    restart: always
    ports:
      - "${POSTGREST_PORT}:3000"
    environment:
      PGRST_DB_URI: ${PGRST_DB_URI}
      PGRST_DB_SCHEMA: ${PGRST_DB_SCHEMA}
      PGRST_DB_ANON_ROLE: ${PGRST_DB_ANON_ROLE}
      PGRST_SERVER_PROXY_URI: ${PGRST_SERVER_PROXY_URI}
      PGRST_OPENAPI_SERVER_PROXY_URI: ${PGRST_OPENAPI_SERVER_PROXY_URI}
    networks:
      - my_network 

  swagger:
    container_name: leif-postgrest-swagger-service
    image: swaggerapi/swagger-ui:latest
    restart: always
    ports:
        - "${SWAGGER_PORT}:8080"
    expose:
        - "8080"
    volumes:
      - ./postgrest-openapi-ro.yaml:/usr/share/nginx/html/postgrest-openapi-ro.yaml:ro # ro = readOnly
    environment:
        API_URL: ./postgrest-openapi-ro.yaml

networks:
  my_network:
    driver: bridge
